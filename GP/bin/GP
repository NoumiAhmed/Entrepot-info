#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'GP'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/GP` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/GP now"
  exit 64
end

include GLI::App


DEPOT_DEFAUT = '.depot.txt' # Fichier par defaut pour depot.
GP  = GestionDepot # Un alias, pour alleger le code.

program_desc "Application pour gestion de depot de pieces informatiques"
version GA::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Donnes pour depot de pieces informatique'
default_value DEPOT_DEFAUT
flag :depot
arg_name 'nom_de_fichier'


##############################################################
# Specifications des diverses commandes
# (presentees en ordre alphabatique)
##############################################################
des'c 'Describe lister here'
arg_name 'Describe arguments to lister here'
command :lister do |c|
  c.desc 'Describe a switch to lister'
  c.switch :s

  c.desc 'Describe a flag to lister'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|
    
    # Your command logic here
     
    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "lister command ran"
  end
end

desc 'Describe trouver here'
arg_name 'Describe arguments to trouver here'
command :trouver do |c|
  c.action do |global_options,options,args|
    puts "trouver command ran"
  end
end

desc 'Describe retirer here'
arg_name 'Describe arguments to retirer here'
command :retirer do |c|
  c.action do |global_options,options,args|
    puts "retirer command ran"
  end
end

desc 'Describe deposer here'
arg_name 'Describe arguments to deposer here'
command :deposer do |c|
  c.action do |global_options,options,args|
    puts "deposer command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
